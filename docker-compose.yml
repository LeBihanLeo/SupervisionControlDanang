version: '3'
services:
  influxdb:
    image: influxdb:2.7.1
    container_name: influxdb
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      - ./certificates/fullchain.pem:/etc/ssl/cert.crt
      - ./certificates/privkey.pem:/etc/ssl/cert.key
    env_file:
      - .env
    restart: on-failure:10
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:8086

  telegraf:
    container_name: telegraf
    image: telegraf:1.19
    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
      - ./certificates/fullchain.pem:/etc/telegraf/cert.crt
      - ./certificates/privkey.pem:/etc/telegraf/cert.key
    env_file:
      - .env
    depends_on:
      - influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:9.4.0
    volumes:
      - grafana-storage:/var/lib/grafana:rw
      - ./grafana/config:/etc/grafana
      - ./certificates/fullchain.pem:/etc/grafana/cert.crt
      - ./certificates/privkey.pem:/etc/grafana/cert.key
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./resources:/usr/share/grafana/public/img/bg/custom
    depends_on:
      - influxdb
    ports:
      - ${GRAFANA_PORT}:3000
      - "3001:3001"

  openhabconfiggen: 
    build: ./openhab_config_generator/front-react-generator
    container_name: openhabconfiggen
    ports:
      - "7000:3000"

  openhabconfiggenapi:
    container_name: openhabconfiggenapi
    build: ./openhab_config_generator/python_code
    ports:
      - "8000:8000"
    volumes:
      - ./fake_devices/app.py:/app/app.py
  openhab:
    image: openhab/openhab:3.4.4
    container_name: openhab
    volumes:
      - ./openhab/addons:/openhab/addons
      - ./openhab/conf:/openhab/conf
      - ./openhab/userdata:/openhab/userdata
      - ./resources:/openhab/conf/html/resources
    ports:
      - "127.0.0.1:8080:8080"
    env_file:
      - .env
    depends_on:
      - influxdb
    restart: always
    networks:
        - scd
  
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    restart: always
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"

  web:
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
      - "443:443"
      - "0.0.0.0:8443:7000"
      - "8005:8005"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/www:/usr/share/nginx/html:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./certificates/:/etc/ssl/certs/:ro
    networks:
        - scd
      
  fakeapi:
    container_name: myfakeapi
    build:
      context: ./fake_devices/
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./fake_devices/app.py:/app/app.py

volumes:
  grafana-storage:
  influxdb-storage:

networks:
  scd:
    driver: bridge